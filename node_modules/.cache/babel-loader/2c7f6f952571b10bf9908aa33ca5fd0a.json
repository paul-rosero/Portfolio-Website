{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/projects.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Project from './projectsComponents/project';\nexport default function Projects() {\n  // const [ repository, setRepository ] = useState([])\n  // const [ name, setName ] = useState(\"\")\n  // const [ description, setDescription ] = useState(\"\")\n  // const [ gitUrl, setGitUrl ] = useState(\"\")\n  // const [ language, setLanguage ] = useState(\"\")\n  // useEffect(() => {\n  function repos() {\n    fetch(\"https://api.github.com/users/paul-rosero/starred\").then(promise => promise.json()).then(data => {\n      console.log(data);\n      data.map(repo => {\n        data = repo;\n      });\n    });\n  } // }, []);\n\n\n  console.log(repos()); // const setData = ({ name, description, gitUrl, language }) => {\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/projects.js"],"names":["React","useState","useEffect","Container","Project","Projects","repos","fetch","then","promise","json","data","console","log","map","repo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B;AACA;AACA;AACA;AACA;AAEA;AACA,WAASC,KAAT,GAAiB;AAACC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACbC,IADa,CACRC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADH,EAEbF,IAFa,CAERG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,MAAAA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAAEJ,QAAAA,IAAI,GAAGI,IAAP;AAAa,OAAhC;AACH,KALa;AAKX,GAdwB,CAe/B;;;AACJH,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,EAAjB,EAhBmC,CAiB/B;AAEA;;AAEA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA1BuBD,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Project from './projectsComponents/project';\n    \nexport default function Projects() {\n    \n    // const [ repository, setRepository ] = useState([])\n    // const [ name, setName ] = useState(\"\")\n    // const [ description, setDescription ] = useState(\"\")\n    // const [ gitUrl, setGitUrl ] = useState(\"\")\n    // const [ language, setLanguage ] = useState(\"\")\n\n    // useEffect(() => {\n    function repos() {fetch(\"https://api.github.com/users/paul-rosero/starred\")\n        .then(promise => promise.json())\n        .then(data => { \n            console.log(data)\n            data.map(repo => { data = repo })  \n        })}\n    // }, []);\nconsole.log(repos())\n    // const setData = ({ name, description, gitUrl, language }) => {\n        \n    // }\n\n    return (\n        <Container>\n            <Project />\n        </Container>    \n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}