{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/resumeComponents/skills.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, ProgressBar } from 'react-bootstrap';\nconst allSkills = [{\n  skillType: \"language\",\n  skillName: \"JavaScript\",\n  skillProgress: 75\n}, {\n  skillType: \"language\",\n  skillName: \"Ruby\",\n  skillProgress: 50\n}, {\n  skillType: \"language\",\n  skillName: \"Linux/Unix\",\n  skillProgress: 50\n}, {\n  skillType: \"framework\",\n  skillName: \"React.Js\",\n  skillProgress: 60\n}, {\n  skillType: \"framework\",\n  skillName: \"Node.Js\",\n  skillProgress: 50\n}, {\n  skillType: \"framework\",\n  skillName: \"Ruby on Rails\",\n  skillProgress: 50\n}, {\n  skillType: \"database\",\n  skillName: \"MongoDb\",\n  skillProgress: 60\n}, {\n  skillType: \"database\",\n  skillName: \"PostgreSQL\",\n  skillProgress: 50\n}, {\n  skillType: \"other\",\n  skillName: \"HTML5/CSS\",\n  skillProgress: 70\n}, {\n  skillType: \"other\",\n  skillName: \"Git/GitHub\",\n  skillProgress: 70\n}, {\n  skillType: \"other\",\n  skillName: \"Bootstrap\",\n  skillProgress: 55\n}, {\n  skillType: \"other\",\n  skillName: \"Spanish\",\n  skillProgress: 100\n}, {\n  skillType: \"other\",\n  skillName: \"Italian\",\n  skillProgress: 75\n}];\nconst renderSkills = allSkills.map((skill, index) => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    itemType: skill.skillType,\n    style: {\n      display: 'flex'\n    },\n    children: [skill.skillName, /*#__PURE__*/_jsxDEV(ProgressBar, {\n      style: {\n        margin: 'auto',\n        width: '75%'\n      },\n      progress: skill.skillProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n});\nconst renderSkill = renderSkills.map(skill => {\n  if (skill.props.itemType === \"language\") {\n    /*#__PURE__*/\n    _jsxDEV(\"h6\", {\n      className: \"language-h6\",\n      children: \"Languages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n\n    skill;\n  } else if (skill.props.itemType === \"framework\") {\n    return /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Frameworks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n    skill;\n  } else if (skill.props.itemType === \"database\") {\n    return /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Databases:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n    skill;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Other:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n    skill;\n  }\n});\n\nclass Skills extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      id: \"skills-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/resumeComponents/skills.js"],"names":["React","Component","Col","Row","ProgressBar","allSkills","skillType","skillName","skillProgress","renderSkills","map","skill","index","display","margin","width","renderSkill","props","itemType","Skills","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Row, ProgressBar } from 'react-bootstrap';\n\nconst allSkills = [\n    { skillType: \"language\", skillName: \"JavaScript\", skillProgress: 75 },\n    { skillType: \"language\", skillName: \"Ruby\", skillProgress: 50 },\n    { skillType: \"language\", skillName: \"Linux/Unix\", skillProgress: 50 },\n    { skillType: \"framework\", skillName: \"React.Js\", skillProgress: 60 },\n    { skillType: \"framework\", skillName: \"Node.Js\", skillProgress: 50 },\n    { skillType: \"framework\", skillName: \"Ruby on Rails\", skillProgress: 50 },\n    { skillType: \"database\", skillName: \"MongoDb\", skillProgress: 60 },\n    { skillType: \"database\", skillName: \"PostgreSQL\", skillProgress: 50 },\n    { skillType: \"other\", skillName: \"HTML5/CSS\", skillProgress: 70 },\n    { skillType: \"other\", skillName: \"Git/GitHub\", skillProgress: 70 },\n    { skillType: \"other\", skillName: \"Bootstrap\", skillProgress: 55 },\n    { skillType: \"other\", skillName: \"Spanish\", skillProgress: 100 },\n    { skillType: \"other\", skillName: \"Italian\", skillProgress: 75 }\n]\n\nconst renderSkills = allSkills.map((skill, index) => {\n    return <Row itemType={ skill.skillType } key={ index } style={{ display: 'flex' }}>\n        {  skill.skillName }\n        <ProgressBar style={{ margin: 'auto', width: '75%'}} progress={skill.skillProgress} />\n    </Row>\n})\n\nconst renderSkill = renderSkills.map( skill => {\n    if (skill.props.itemType === \"language\") {\n        <h6 className=\"language-h6\">Languages:</h6>\n         skill \n    } else if (skill.props.itemType === \"framework\") {\n        return <h6>Frameworks:</h6>\n        skill \n    } else if (skill.props.itemType === \"database\") {\n        return <h6>Databases:</h6>\n        skill\n    } else {\n        return <h6>Other:</h6>\n        skill\n    }\n})  \n\n\nclass Skills extends Component {\n    render() {\n        return (\n            <Col id=\"skills-grid\">\n                \n                    <h5>Skills</h5>\n                    \n                    \n               \n            </Col>\n        )\n    }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}