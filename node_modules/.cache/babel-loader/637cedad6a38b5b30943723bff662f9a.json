{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/resumeComponents/skills.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, ProgressBar } from 'react-bootstrap';\nconst allSkills = [{\n  skillType: \"language\",\n  skillName: \"JavaScript\",\n  skillProgress: 75\n}, {\n  skillType: \"language\",\n  skillName: \"Ruby\",\n  skillProgress: 50\n}, {\n  skillType: \"language\",\n  skillName: \"Linux/Unix\",\n  skillProgress: 50\n}, {\n  skillType: \"framework\",\n  skillName: \"React.Js\",\n  skillProgress: 60\n}, {\n  skillType: \"framework\",\n  skillName: \"Node.Js\",\n  skillProgress: 50\n}, {\n  skillType: \"framework\",\n  skillName: \"Ruby on Rails\",\n  skillProgress: 50\n}, {\n  skillType: \"database\",\n  skillName: \"MongoDb\",\n  skillProgress: 60\n}, {\n  skillType: \"database\",\n  skillName: \"PostgreSQL\",\n  skillProgress: 50\n}, {\n  skillType: \"other\",\n  skillName: \"HTML5/CSS\",\n  skillProgress: 70\n}, {\n  skillType: \"other\",\n  skillName: \"Git/GitHub\",\n  skillProgress: 70\n}, {\n  skillType: \"other\",\n  skillName: \"Bootstrap\",\n  skillProgress: 55\n}, {\n  skillType: \"other\",\n  skillName: \"Spanish\",\n  skillProgress: 100\n}, {\n  skillType: \"other\",\n  skillName: \"Italian\",\n  skillProgress: 75\n}];\nconst renderSkills = allSkills.map((skill, index) => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    itemType: skill.skillType,\n    style: {\n      display: 'flex'\n    },\n    children: [skill.skillName, /*#__PURE__*/_jsxDEV(ProgressBar, {\n      style: {\n        margin: 'auto',\n        width: '75%'\n      },\n      progress: skill.skillProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n});\n\nconst renderSkill = () => {}; // const renderSkill = renderSkills.map( skill => {\n//     if (skill.props.itemType === \"language\") {\n//         return (\n//         // skill  \n//         );\n//     } else if (skill.props.itemType === \"framework\") {\n//         return(\n//             <h6>Frameworks:</h6>\n//         // skill \n//         );\n//     } else if (skill.props.itemType === \"database\") {\n//         return(\n//             <h6>Databases:</h6>\n//         // skill\n//         ); \n//     } else {\n//         return(\n//             <h6>Other:</h6>\n//         // skill\n//         );\n//     }\n// })  \n\n\nconsole.log(renderAllSkills());\n\nclass Skills extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      id: \"skills-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"language-h6\",\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/paulrosero/Development/code/myportfoliowebpage/portfolio-website/src/components/resumeComponents/skills.js"],"names":["React","Component","Col","Row","ProgressBar","allSkills","skillType","skillName","skillProgress","renderSkills","map","skill","index","display","margin","width","renderSkill","console","log","renderAllSkills","Skills","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Row, ProgressBar } from 'react-bootstrap';\n\nconst allSkills = [\n    { skillType: \"language\", skillName: \"JavaScript\", skillProgress: 75 },\n    { skillType: \"language\", skillName: \"Ruby\", skillProgress: 50 },\n    { skillType: \"language\", skillName: \"Linux/Unix\", skillProgress: 50 },\n    { skillType: \"framework\", skillName: \"React.Js\", skillProgress: 60 },\n    { skillType: \"framework\", skillName: \"Node.Js\", skillProgress: 50 },\n    { skillType: \"framework\", skillName: \"Ruby on Rails\", skillProgress: 50 },\n    { skillType: \"database\", skillName: \"MongoDb\", skillProgress: 60 },\n    { skillType: \"database\", skillName: \"PostgreSQL\", skillProgress: 50 },\n    { skillType: \"other\", skillName: \"HTML5/CSS\", skillProgress: 70 },\n    { skillType: \"other\", skillName: \"Git/GitHub\", skillProgress: 70 },\n    { skillType: \"other\", skillName: \"Bootstrap\", skillProgress: 55 },\n    { skillType: \"other\", skillName: \"Spanish\", skillProgress: 100 },\n    { skillType: \"other\", skillName: \"Italian\", skillProgress: 75 }\n]\n\nconst renderSkills = allSkills.map((skill, index) => {\n    return <Row itemType={ skill.skillType } key={ index } style={{ display: 'flex' }}>\n        {  skill.skillName }\n        <ProgressBar style={{ margin: 'auto', width: '75%'}} progress={skill.skillProgress} />\n    </Row>\n})\n\nconst renderSkill = () =>{\n\n}\n\n// const renderSkill = renderSkills.map( skill => {\n//     if (skill.props.itemType === \"language\") {\n//         return (\n           \n//         // skill  \n//         );\n//     } else if (skill.props.itemType === \"framework\") {\n//         return(\n//             <h6>Frameworks:</h6>\n//         // skill \n//         );\n//     } else if (skill.props.itemType === \"database\") {\n//         return(\n//             <h6>Databases:</h6>\n//         // skill\n//         ); \n//     } else {\n//         return(\n//             <h6>Other:</h6>\n//         // skill\n//         );\n//     }\n// })  \n\nconsole.log(renderAllSkills())\nclass Skills extends Component {\n    render() {\n        return (\n            <Col id=\"skills-grid\">\n                <h5>Skills</h5>\n                <h6 className=\"language-h6\">Languages:</h6>\n                {/* {(renderSkills) => {\n                    renderSkills.map(skill)\n                }}    */}\n               \n            </Col>\n        )\n    }\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}